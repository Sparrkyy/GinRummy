import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
//import Image from 'next/image'
//import styles from '../styles/Home.module.css'
import Form from "react-bootstrap/Form";
import Button from "react-bootstrap/Button";
import "bootstrap/dist/css/bootstrap.min.css";
import { FormEventHandler, useRef, useContext, useEffect } from "react";
import axios from "axios";
import AuthContext from "../utils/AuthContext";


const Home: NextPage = () => {
  //const { userInfo, setUserInfo } = useContext(AuthContext);
  const username = useRef("");
  const password = useRef("");
  const router = useRouter();
  const APIBASENAME = useRef<string | null>(null)

  useEffect(()=>{
    const w = window.location.href
    APIBASENAME.current = w[0] + ":" + w[1] + ":8080"
  })

  const login: FormEventHandler<HTMLFormElement> = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post(APIBASENAME.current + "/login", {
        username: username.current,
        password: password.current,
      });
      const jsonResponse = response.data;
      if (jsonResponse.hasOwnProperty("jwt")) {
        console.log(response.data);
        //setUserInfo(response.data);
        router.push("/game");
      } else {
        console.log("no jwt??");
      }
    } catch (e) {
      console.log("Failed Authenication");
      console.log(e);
    }
  };

  return (
    <div
      className="w-screen h-screen flex justify-center items-center flex-column"
      style={{ backgroundColor: "#FEC5E5" }}
    >
      <Head>
        <title>Gin Rummy Online</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1
        style={{
          fontWeight: 900,
          fontSize: "3.5rem",
          padding: 30,
          textAlign: "center",
        }}
      >
        GIN RUMMY ONLINE
      </h1>
      <div
        style={{
          maxWidth: "300px",
          border: "3px solid gray",
          padding: "20px",
          borderRadius: "5px",
          backgroundColor: "#FFF",
        }}
      >
        <Form onSubmit={login}>
          <Form.Group className="mb-3" controlId="formBasicEmail">
            <Form.Label style={{ fontWeight: 600 }}>Username</Form.Label>
            <Form.Control
              type="text"
              placeholder="Username"
              onChange={(e) => {
                username.current = e.target.value;
              }}
            />
          </Form.Group>
          <Form.Group className="mb-3" controlId="formBasicPassword">
            <Form.Label style={{ fontWeight: 600 }}>Password</Form.Label>
            <Form.Control
              type="password"
              placeholder="Password"
              onChange={(e) => {
                password.current = e.target.value;
              }}
            />
          </Form.Group>
          <div className="d-grid gap-2">
            <Button variant="primary" type="submit" size="lg">
              Login
            </Button>
          </div>
        </Form>
      </div>
    </div>
  );
};

export default Home;
